# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Make directory
        run: mkdir _site
      - name: Copy files
        run: |
          cp index.html extsub.js extsub.css \
             coi-serviceworker/coi-serviceworker.min.js \
             _site
      - name: Fetch ffmpeg
        run: |
          cd _site && \
          curl -o ffmpeg-util.js "https://unpkg.com/@ffmpeg/util@0.12.0/dist/umd/index.js" && \
          curl "https://unpkg.com/@ffmpeg/ffmpeg@0.12.2/dist/umd/ffmpeg.js" && \
          curl "https://unpkg.com/@ffmpeg/core-mt@0.12.1/dist/umd/ffmpeg-core.js" && \
          curl "https://unpkg.com/@ffmpeg/core-mt@0.12.1/dist/umd/ffmpeg-core.wasm" && \
          curl "https://unpkg.com/@ffmpeg/core-mt@0.12.1/dist/umd/ffmpeg-core.worker.js"
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
